{"_path":"/angular/angular-starter","_dir":"angular","_draft":false,"_partial":false,"_locale":"","title":"Angular 起手式","description":"本文件會針對學習與撰寫 Angular 所需要的工具與知識整理下來，當作入門的起手式。","pageTitle":"Angular 起手式","contributors":["samuikaze"],"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":""},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"本文件會針對學習與撰寫 Angular 所需要的工具與知識整理下來，當作入門的起手式。"}]},{"type":"element","tag":"h2","props":{"id":"table-of-contents"},"children":[{"type":"text","value":"Table of Contents"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E9%9C%80%E6%B1%82%E6%8A%80%E8%83%BD"},"children":[{"type":"text","value":"需求技能"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E5%89%8D%E7%AB%AF%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84-html--css--javascript"},"children":[{"type":"text","value":"前端最基本的 HTML + CSS + Javascript"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#typescript"},"children":[{"type":"text","value":"Typescript"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E5%8D%94%E5%8A%A9%E5%B7%A5%E5%85%B7"},"children":[{"type":"text","value":"協助工具"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E5%BF%85%E8%A6%81%E5%B7%A5%E5%85%B7"},"children":[{"type":"text","value":"必要工具"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E9%81%B8%E7%94%A8%E5%B7%A5%E5%85%B7"},"children":[{"type":"text","value":"選用工具"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E9%96%8B%E5%A7%8B%E7%AC%AC%E4%B8%80%E5%80%8B-angular-%E7%B7%B4%E7%BF%92"},"children":[{"type":"text","value":"開始第一個 Angular 練習"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99"},"children":[{"type":"text","value":"參考資料"}]}]}]},{"type":"element","tag":"h2","props":{"id":"需求技能"},"children":[{"type":"text","value":"需求技能"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"撰寫 Angular 前，需要先學會下面所列的這些基礎技能:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"前端最基本的 HTML + CSS + Javascript"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Typescript"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下是針對為什麼撰寫 Angular 前要學習這些技能的說明"}]},{"type":"element","tag":"h3","props":{"id":"前端最基本的-html-css-javascript"},"children":[{"type":"text","value":"前端最基本的 HTML + CSS + Javascript"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Angular 是前端框架，而前端跟 HTML、CSS 與 Javascript 一定脫不了關係，因此對於這三項技能必須有基礎的了解，知道如何透過 HTML + CSS 刻劃出想要的版型，並透過 Javascript 實作頁面中的功能。"}]},{"type":"element","tag":"h3","props":{"id":"typescript"},"children":[{"type":"text","value":"Typescript"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Angular 目前開發上都是使用 Typescript 進行撰寫與編譯，因此對於 Typescript 必須有基礎的了解，特別是型別、介面的宣告、泛型、列舉、物件導向的使用。"}]},{"type":"element","tag":"h2","props":{"id":"協助工具"},"children":[{"type":"text","value":"協助工具"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"開發 Angular 少不了一些工具來協助建置、撰寫與編譯專案，下面會針對必要與選用的工具進行說明"}]},{"type":"element","tag":"h3","props":{"id":"必要工具"},"children":[{"type":"text","value":"必要工具"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"下面列出來的這些工具是必要的工具，學會這些工具是撰寫 Angular 專案的前置需求:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Node.js"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"主要是要使用其附帶的 npm 套件管理工具以及其由 Google 所開發並應用於 Google Chrome 系列瀏覽器的 V8 引擎"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"@angular/cli"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"在建置、撰寫、測試與編譯 Angular 專案時一定會用到的指令工具，因開發過程會大量使用，因此對於如何建立專案、建立元件 / 服務 / 模組 / 路由等、啟動測試環境、編譯正式版本等指令需要非常熟悉。"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Git"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"版本控制，透過 Angular 指令建立專案時預設就會協助開發者初始化版本控制，在實際場景中，版本控制工具除了可以對專案進行版本控制外，也增加了專案協作的能力"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"任意終端機"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"不論在何種作業系統中，都一定會包含一個終端機應用程式供開發者或一般使用者使用，前面也有提到開發專案會大量使用 Angular 指令做事，npm 也是透過指令來管理其套件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Visual Studio Code"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"常被簡稱為 VSCode，目前在 Javascript 與 Typescript 世界中，它是公認最好用的「文字編輯器」，主要原因是因為 Typescript 與 VSCode 都是由微軟所開發，因此在整合方面非常好，再加上可以安裝延伸模組的特性，讓其除了有基礎的錯誤警示功能外，還可以加上除錯 (Debugger) 等額外功能，因此深受廣大的社群愛戴。"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"而下面列出來的是開發 Angular 專案時一定要安裝的延伸模組:"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"之所以稱其為「文字編輯器」而非 IDE 是因為有一部份的社群開發者認為在沒有安裝任何套件的情況下，VSCode 本身對於特定的程式語言並沒有除錯、編譯等功能，因此將其認定為文字編輯器，但這邊我也不想吵這個，開發起來順手最重要。"}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Angular Language Service"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"由 Angular 官方所開發的語言服務伺服器，提供程式碼撰寫時的快速完成功能。"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Debugger for (任意瀏覽器)"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"透過中斷點來找出錯誤我想是很常見的除錯方式，在 VSCode 中若要透過中斷點來讓程式執行暫停在特定位置，就必須安裝這類套件，目前並不是每個瀏覽器都支援，但可以嘗試找看看有沒有相關的套件可以使用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"EditorConfig for VS Code"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"透過 .editorconfig 檔來統一專案中程式碼撰寫風格是非常常見的，在 VSCode 中必須安裝此套件，.editorconfig 中所撰寫的規則才會生效"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ESLint"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"看到 Lint 字樣就是到這個套件是用於支援 ESLint 這個 npm 套件的延伸模組，透過這個模組，可以將團隊所規定的撰寫規範、風格等，透過 ESLint 設定檔來加以限制，透過 ESLint 套件可以讓不符合規範的程式碼被標上紅色或黃色的下波浪線，進而增進專案的程式碼品質"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Git Graph"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"版本控制圖表協助工具，當開發到一定的規模後，透過指令來檢視整個專案的分支情形是非常痛苦的事情，目前在所有圖形化分支工具中，我認為這款所匯出的圖形是最易讀懂，因此非常建議安裝此套件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Prettier - Code formatter"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"雖然 VSCode 內建就有針對 HTML / CSS / Javascript / Typescript 的格式化工具，但透過安裝此工具，可以針對 Sass、Scss 等非原生支援的檔案進行格式化"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"選用工具"},"children":[{"type":"text","value":"選用工具"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以下是開發過程中可以考慮使用，但非必要的工具:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"nvm"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Node.js 有很多版本，而 Angular 每個版本針對 Node.js 版本的要求都不同，為了讓大家可以更方便的在不同版本間切換，非常推薦透過 nvm 進行 Node.js 的版本控制"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Windows 使用者有第三方的 Port 版，搜尋 nvm for windows 就可以找到"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"pnpm"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"npm 最常被大家詬病的就是其套件管理的效率太差，雖然官方有推出新的解決方案，但好像沒有大力推廣，且後續好像也沒有繼續開發，因此紛紛出現第三方套件來解決這個問題，目前就 yarn 套件管理器之外，最常見的應該就屬 pnpm 了"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"它是透過將 npm 的套件安裝到作業系統使用者的資料夾中，每個專案 node_modules 資料夾中的套件資料夾會透過符號連結 (Symbolic link) 的方式把實際位置指到實際套件安裝的資料夾，透過這個方式管理套件除了可以節省硬碟空間外，對於已經安裝過的套件不需要再重新下載，因此在安裝的過程也會比較快"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Windows 的實作方式與 Linux / MacOS 不同，但原理一樣，不過若專案安裝的套件過於複雜，或必須加上 npm 的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"--legacy-peer-deps"}]},{"type":"text","value":" 參數才有辦法成功安裝的話，在 Windows 上就不建議使用此工具管理套件"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Docker / Podman"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"透過容器來把主機環境與開發環境隔離是現在非常常見的開發方式，透過這種方式開發可以不用將開發所需的工具安裝到主機環境中，只要執行特定的映像檔，就可以把測試環境跑起來，且若是多人同時開發，透過容器還可以統一開發環境，避免因環境不同導致最終執行結果出現差異的狀況發生"},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Windows 使用者可以透過 WSL2 或 Docker Desktop 來執行"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"而 VSCode 的套件中也有一些選用的套件:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Dev Containers"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"容器開發必要的套件，透過這個套件讓 VSCode 可以開啟容器中的任意檔案與資料夾，"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"DotEnv"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"雖然 Angular 若有環境變數需要設定會使用其自帶的 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":"environments.ts"}]},{"type":"text","value":" 檔來設定，但仍有少數團隊會使用 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" 檔來管理，若團隊是透過 "},{"type":"element","tag":"code","props":{"className":""},"children":[{"type":"text","value":".env"}]},{"type":"text","value":" 來管理這些變數，建議可以安裝這個套件"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"GitLens"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"團隊協作開發常常會發生程式碼寫錯，但沒人承認的狀況發生，在 Git 原生就有提供 Blame 功能讓團隊成員可以找出兇手是誰，但若檔案內容非常大，指令就必須下的很複雜，透過這個套件的協助，只要將輸入游標移動到指定的行後，該行後面就會出現最後是由誰所修改，非常的方便，若團隊中常有人搞事又不承認，這個套件就非常推薦安裝"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"IntelliCode"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"這個功能是由 Visual Studio 搬過來的，在 Copilot 出現前非常好用的自動完成工具，撰寫過程中會給出很多好用的提示，雖然不像 Visual Studio 內建的那麼聰明，但對於懶得打字的人來說非常好用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"IntelliCode API Usage Examples"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"這個套件比 IntelliCode 還要晚出，其所提供的功能是協助開發者在 GitHub 上找出指定的功能別人是怎麼使用的，讓開發者當作參考，對於初學 Angular 或常用新出套件的開發者來說非常好用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Live Share"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"程式碼共編神器，也是從 Visual Studio 拔出來的功能，透過這個套件可以不用透過版控或任何第三方工具，直接在 VSCode 上同步看到修改的程式碼，非常適用於團隊開發臨時討論用"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Pretty TypeScript Errors"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"有些第三方開發者認為原生的 VSCode 顯示 Typescript 錯誤非常的雜亂，因此想透過這個套件讓錯誤訊息更加直覺與整潔，但效果很主觀，因此對於錯誤訊息也有潔癖的人來說，這個套件是必裝"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Sass (.sass only)"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"開發比較常見 CSS 與 Scss，但若你的團隊開發時是使用 Sass，那這個套件就是必裝套件了"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"WSL"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"Windows 使用者若想在 WSL2 中開發 Angular，建議安裝此延伸模組，其所提供的功能與 Dev Containers 類似，但是是與 WSL2 作互動"}]}]},{"type":"element","tag":"h2","props":{"id":"開始第一個-angular-練習"},"children":[{"type":"text","value":"開始第一個 Angular 練習"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"網路上或市面上有許多學習 Angular 相關的資源，但若是第一次撰寫 Angular，會建議先去官方完成"},{"type":"element","tag":"a","props":{"href":"https://v17.angular.io/tutorial/tour-of-heroes","rel":["nofollow"]},"children":[{"type":"text","value":"「英雄之旅」"}]},{"type":"text","value":"的入門專案，在這個練習的專案中你會學到最基礎的 Angular 撰寫，以及 API 如何呼叫"}]},{"type":"element","tag":"h2","props":{"id":"參考資料"},"children":[{"type":"text","value":"參考資料"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://zh.wikipedia.org/zh-tw/Node.js","rel":["nofollow"]},"children":[{"type":"text","value":"Node.js - 維基百科"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://v17.angular.io/tutorial/tour-of-heroes","rel":["nofollow"]},"children":[{"type":"text","value":"英雄之旅 - Angular Tutorial - Angular"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"table-of-contents","depth":2,"text":"Table of Contents"},{"id":"需求技能","depth":2,"text":"需求技能","children":[{"id":"前端最基本的-html-css-javascript","depth":3,"text":"前端最基本的 HTML + CSS + Javascript"},{"id":"typescript","depth":3,"text":"Typescript"}]},{"id":"協助工具","depth":2,"text":"協助工具","children":[{"id":"必要工具","depth":3,"text":"必要工具"},{"id":"選用工具","depth":3,"text":"選用工具"}]},{"id":"開始第一個-angular-練習","depth":2,"text":"開始第一個 Angular 練習"},{"id":"參考資料","depth":2,"text":"參考資料"}]}},"_type":"markdown","_id":"content:2.angular:1.angular-starter.md","_source":"content","_file":"2.angular/1.angular-starter.md","_extension":"md"}